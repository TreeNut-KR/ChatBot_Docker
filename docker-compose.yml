version: '3.8'

services:
  nginx:
    restart: always
    build:
      context: ./nginx
    image: jgkim14/chatbot-nginx:latest  # Docker Hub에 푸시할 이미지 이름
    ports:
      - "80:80"
    depends_on:
      - fastapi
      - springboot

  fastapi:
    restart: always
    build:
      context: ./fastapi
    image: jgkim14/chatbot-fastapi:latest  # Docker Hub에 푸시할 이미지 이름
    ports:
      - "8000:8000"
    volumes:
      - ./fastapi/sources:/app/sources
      - ./fastapi/sources/logs:/app/sources/logs
    depends_on:
      - mysql
      - mongodb
      - pytorch
    command: [
      "/usr/local/bin/wait-for-it",
      "mysql:3306", "--",
      "uvicorn", "server:app", "--host", "0.0.0.0", "--port", "8000"
      ]
  
  pytorch:
    restart: always
    build:
      context: ./pytorch
    image: jgkim14/chatbot-pytorch:latest
    runtime: nvidia
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
    volumes:
      - ./pytorch/model:/app

  springboot:
    restart: always
    build:
      context: ./springboot
    image: jgkim14/chatbot-springboot:latest  # Docker Hub에 푸시할 이미지 이름
    ports:
      - "8080:8080"
    command: ["./gradlew build -x test --no-daemon"]
    depends_on:
      - mysql

  mysql:
    restart: unless-stopped
    build:
      context: ./mysql
    image: jgkim14/chatbot-mysql:latest  # Docker Hub에 푸시할 이미지 이름
    ports:
      - "3308:3306"
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_HOST: ${MYSQL_ROOT_HOST}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - ./mysql/data:/var/lib/mysql
      - ./mysql/log.cnf:/etc/mysql/conf.d/log.cnf:ro
      - ./mysql/logs:/var/log/mysql
    command: [
      "--character-set-server=utf8mb4",
      "--collation-server=utf8mb4_unicode_ci"
      ]

  mongodb:
    restart: unless-stopped
    build:
      context: ./mongo
    image: jgkim14/chatbot-mongodb:latest  # Docker Hub에 푸시할 이미지 이름
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ADMIN_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ADMIN_PASSWORD}
      MONGO_DATABASE: ${MONGO_DATABASE}
    volumes:
      - ./mongo/data:/data/db
      - ./mongo/log:/var/log/mongodb
      - ./mongo/.env:/docker-entrypoint-initdb.d/.env
